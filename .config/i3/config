set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Ubuntu Regular 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
#bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar
# start the picom
exec_always --no-startup-id picom --config ~/.config/picom.conf
# start a terminal
bindsym $mod+Return exec kitty
#i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start Rofi
# bindsym $mod+d exec --no-startup-id dmenu_run
bindsym $mod+d exec --no-startup-id rofi -show run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# Screenshot binding
bindsym Print exec --no-startup-id maim -i $(xdotool getactivewindow) ~/Pictures/$(date).jpg


# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: ïˆ¼ Main"
set $ws2 "2: ï‰© Firefox"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+shift+x exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# shutdowm key binding
bindsym $mod+Shift+s exec --no-startup-id shutdown now

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the windowâ€™s width.
        # Pressing right will grow the windowâ€™s width.
        # Pressing up will shrink the windowâ€™s height.
        # Pressing down will grow the windowâ€™s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# ðŸŒ™ Ultra-Dark i3 Color Theme â€“ Soothing + Focused
show_marks yes
# Window borders
client.focused          #168AAD #168AAD #D9ED92 #1A759F
client.focused_inactive #122B3F #122B3F #6A8F82 #1A759F
client.unfocused        #0E2233 #0E2233 #547C74 #0E2233
client.urgent           #8B0000 #8B0000 #FFFFFF #8B0000
client.placeholder      #0B1A2A #0B1A2A #D9ED92 #0B1A2A
client.background       #0B1A2A

# Polybar
exec_always --no-startup-id bash -c "killall -q polybar; while pgrep -x polybar >/dev/null; do sleep 0.1; done; polybar mybar &"

# Keybinding for i3lock
bindsym $mod+x exec --no-startup-id i3lock-fancy -p -t "Start typing password"

# dunst for OSD(onscreen display)
exec_always --no-startup-id dunst

# Global music player button bindings
# Requires playerctl or dbus-send or pactl integration
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous


# assign programs to workspaces
for_window [class="firefox"] move to workspace $ws2
for_window [class="Spotify"] move to workspace $ws3

# using feh to set the wallpaper
exec_always feh --bg-fill /home/arcticbear/Pictures/walls/wallpaper2.jpg

# removing the titlebar (changing the size of titlebar)
for_window [class=".*"] border pixel 2

# Gaps between windows
# Space between windows 
gaps inner 8
# Space between windows and screen edge
gaps outer 0

# Optional: smart gaps (disable outer gaps when only 1 window is open)
#smart_gaps on

# Optional: smart borders (remove borders when only one window is open)
#smart_borders on

# Brightness OSD
bindsym XF86MonBrightnessUp exec --no-startup-id bash -c "brightnessctl set +10% && notify-send 'Brightness' \"$(brightnessctl get)\""
bindsym XF86MonBrightnessDown exec --no-startup-id bash -c "brightnessctl set 10%- && notify-send 'Brightness' \"$(brightnessctl get)\""


# Volume control using wpctl and dunst
bindsym XF86AudioRaiseVolume exec --no-startup-id bash -c "wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ && notify-send 'ðŸ”Š Volume' \"$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print int($2 * 100)}')%\""

bindsym XF86AudioLowerVolume exec --no-startup-id bash -c "wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- && notify-send 'ðŸ”‰ Volume' \"$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print int($2 * 100)}')%\""

bindsym XF86AudioMute exec --no-startup-id bash -c "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle && notify-send 'ðŸ”‡ Audio' 'Toggled Mute'"

# Swap escape and caps lock keys
exec_always --no-startup-id setxkbmap -option caps:swapescape

# Block screen locking when a video is playing
exec_always --no-startup-id xss-lock --notifier "playerctl status | grep -q Playing && exit 1" -- i3lock-fancy -p -t "Start typing password"


